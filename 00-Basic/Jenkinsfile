// https://www.youtube.com/watch?v=o39V8R2ESvo&list=PLdOotbFwzDIiU4Hs8ySZr-phOeGMBY_3D&index=4 (min 11:20)

pipeline {
  agent any

  parameters {
    string(name: 'name_container', defaultValue: 'proyecto-qa', description: 'nombre del docker')
    string(name: 'name_imagen', defaultValue: 'iproyecto-qa', description: 'nombre de la imagen')
    string(name: 'tag_imagen', defaultValue: 'latest', description: 'etiqueta de la imagen')
    string(name: 'puerto_imagen', defaultValue: '81', description: 'puerto a publicar')
  }

  environment {
    name_final = "${name_container}${tag_imagen}${puerto_imagen}"        
  }

  stages {
    
    // Primer paso, detener/borrar la maquina en caso de estar corriendo
    stage('stop/rm') {
      when {
        expression { 
          DOCKER_EXIST = sh(returnStdout: true, script: 'echo "$(docker ps -q --filter name=${name_final})"').trim()
          return  DOCKER_EXIST != '' 
        }
      }
      steps {
        script { 
          sh ''' 
            docker stop ${name_final}
            docker rm ${name_final}
          '''
        }         
      }                    
    }

    // Segundo paso, compilar la imagen
    stage('build') {
      steps {
        script {
          sh '''
            docker build 00-Basic/ -t ${name_imagen}:${tag_imagen}
          '''
        }
      }
    }

    // Tercer paso, correr la imagen
    stage('run') {
      steps {
        script {
          sh '''
            docker run -dp ${puerto_imagen}:80 --name ${name_final} ${name_imagen}:${tag_imagen}
          '''
        }
      }
    } // Third step

  } // Stages
} // Pipeline
